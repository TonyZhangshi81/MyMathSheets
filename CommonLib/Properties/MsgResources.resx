<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="E0001L" xml:space="preserve">
    <value>E0001L:指定的信息與ExportAttribute不一致或者發現多個</value>
  </data>
  <data name="E0018L" xml:space="preserve">
    <value>E0018L:指定的{0}題型策略對象未找到</value>
  </data>
  <data name="E0019L" xml:space="preserve">
    <value>E0019L:指定的{0}題型參數對象未找到</value>
  </data>
  <data name="E0020L" xml:space="preserve">
    <value>E0020L:指定的{0}計算式對象未找到</value>
  </data>
  <data name="E0021L" xml:space="preserve">
    <value>E0021L:指定的{0}題型HTML支援類對象未找到</value>
  </data>
  <data name="E0022L" xml:space="preserve">
    <value>E0022L:指定的{0}題型HTML替換標籤未找到</value>
  </data>
  <data name="E0023L" xml:space="preserve">
    <value>E0023L:計算式對象沒有實例化</value>
  </data>
  <data name="E0024L" xml:space="preserve">
    <value>E0024L:指定的運算符參數{0}不正確</value>
  </data>
  <data name="E0025L" xml:space="preserve">
    <value>E0025L:小時數或者分鐘數未指定</value>
  </data>
  <data name="E0026L" xml:space="preserve">
    <value>E0026L:指定小時數{0}越界</value>
  </data>
  <data name="E0027L" xml:space="preserve">
    <value>E0027L:指定{0}文件的MathSheetMarker屬性未定義</value>
  </data>
  <data name="E0036L" xml:space="preserve">
    <value>E0036L:指定參數【{0}】的值為NULL</value>
  </data>
  <data name="E0037L" xml:space="preserve">
    <value>E0037L:指定對象為NULL</value>
  </data>
  <data name="I0001L" xml:space="preserve">
    <value>I0001L:指定運算符實例準備作成</value>
  </data>
  <data name="I0002L" xml:space="preserve">
    <value>I0002L:{0}運算符實例作成完畢</value>
  </data>
  <data name="I0003L" xml:space="preserve">
    <value>I0003L:MEF容器中已經收集到指定類型的運算符類型并準備實例化</value>
  </data>
  <data name="I0004L" xml:space="preserve">
    <value>I0004L:MEF容器中已經收集到指定類型的運算符類型所需的參數類型并準備實例化</value>
  </data>
  <data name="I0005L" xml:space="preserve">
    <value>I0005L:指定ID【{0}】參數實例初期化完成</value>
  </data>
  <data name="I0006L" xml:space="preserve">
    <value>I0006L:指定類型的運算符計算式開始構築</value>
  </data>
  <data name="I0007L" xml:space="preserve">
    <value>I0007L:指定類型的運算符計算式構築完畢</value>
  </data>
  <data name="I0008L" xml:space="preserve">
    <value>I0008L:MEF容器中已經收集到指定類型的HTML支援類類型并準備實例化</value>
  </data>
  <data name="I0009L" xml:space="preserve">
    <value>I0009L:指定類型的HTML支援類開始繪製HTML</value>
  </data>
  <data name="I0010L" xml:space="preserve">
    <value>I0010L:指定類型的支援類HTML繪製完畢</value>
  </data>
  <data name="I0011L" xml:space="preserve">
    <value>I0011L:題型HTML支援類spring對象工廠配置導入操作已經完成</value>
    <comment>（不使用）保留</comment>
  </data>
  <data name="I0012L" xml:space="preserve">
    <value>I0012L:{0}題型的HTML支援類對象注入準備</value>
  </data>
  <data name="I0013L" xml:space="preserve">
    <value>I0013L:{0}題型的HTML支援類對象實例化完成</value>
  </data>
  <data name="I0014L" xml:space="preserve">
    <value>I0014L:指定題型的HTML模板作成</value>
  </data>
  <data name="I0015L" xml:space="preserve">
    <value>I0015L:替換HTML模板中{0}的注入點信息</value>
  </data>
  <data name="I0016L" xml:space="preserve">
    <value>I0016L:{0}題型HTML模板注入開始</value>
  </data>
  <data name="I0017L" xml:space="preserve">
    <value>I0017L:靜態HTML文件作成</value>
  </data>
  <data name="I0028L" xml:space="preserve">
    <value>I0028L:指定{0}文件被讀取加載</value>
  </data>
  <data name="I0029L" xml:space="preserve">
    <value>I0029L:模塊識別信息（{0}）</value>
  </data>
  <data name="I0030L" xml:space="preserve">
    <value>I0030L:模塊讀取處理完畢（共計：{0}個）</value>
  </data>
  <data name="I0031L" xml:space="preserve">
    <value>I0031L:模塊讀取處理開始</value>
  </data>
  <data name="I0032L" xml:space="preserve">
    <value>I0032L:指定題型編號為空，默認使用{0}作為題型編號</value>
  </data>
  <data name="I0033L" xml:space="preserve">
    <value>I0033L:指定題型編號{0}不存在，默認使用{1}作為題型編號</value>
  </data>
  <data name="I0034L" xml:space="preserve">
    <value>I0034L:指定ID【{0}】計算式作成處理開始，以下計算式列舉：</value>
  </data>
  <data name="I0035L" xml:space="preserve">
    <value>I0035L:指定ID【{0}】計算式作成處理結束</value>
  </data>
</root>