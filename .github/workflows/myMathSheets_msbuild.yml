# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MyMathSheet_MSBuild

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug
  
  WORKING_DIR: w_${{ github.run_id }}

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: CheckOut Repository
      uses: actions/checkout@v3
      with:
        path: ${{ env.WORKING_DIR }}
        
    - name: checkout lfs contens
      working-directory: ${{ env.WORKING_DIR }}
      run: |
        git lfs checkout
        git lfs pull

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{ env.WORKING_DIR }}
      run: nuget restore MyMathSheets.All.sln
      
    - name: Build Common
      working-directory: ${{ env.WORKING_DIR }}
      run: |
        msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} MyMathSheets.Common.sln /t:rebuild /v:Normal
        if (-Not $?) {
          exit 1
        } else {
          exit 0
        }
        
    - name: Build Strategy
      working-directory: ${{ env.WORKING_DIR }}
      run: |
        msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} MyMathSheets.Strategy.sln /t:rebuild /v:Normal
        if (-Not $?) {
          exit 1
        } else {
          exit 0
        }
        
    - name: Build Shows
      working-directory: ${{ env.WORKING_DIR }}
      run: |
        msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} MyMathSheets.Shows.sln /t:rebuild /v:Normal
        if (-Not $?) {
          exit 1
        } else {
          exit 0
        }
