# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: MyMathSheets_test

on:
  workflow_dispatch:
  pull_request:
    branches: [ "master" ]

env:
  OUTPUT_DIR: C:/runner/output/${{ github.run_id }}/tests
  REPORT_DIR: C:/runner/output/${{ github.run_id }}/tests/reports
  
  # Path to the solution file relative to the root of the project.
  WORKING_DIR: w_${{ github.run_id }}

  # Configuration type to build.
  BUILD_CONFIGURATION: Debug
  
jobs:
  test:

    runs-on: windows-latest

    steps:
    - name: CheckOut Repository
      uses: actions/checkout@v3
      with:
        path: ${{ env.WORKING_DIR }}

    - name: checkout lfs contens
      working-directory: ${{ env.WORKING_DIR }}
      run: |
        git lfs checkout
        git lfs pull
        
    #- name: Restore NuGet packages
    #  working-directory: ${{ env.WORKING_DIR }}
    #  run: nuget restore MyMathSheets.All.sln

    - name: Setup .NET    
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    #- name: Restore dependencies
    #  working-directory: ${{ env.WORKING_DIR }}
    #  run: dotnet restore ./CommonLibTest/MyMathSheets.CommonLibTest.csproj
      
    - name: Test
      working-directory: ${{ env.WORKING_DIR }}
      run: |
        dotnet test ./CommonLibTest/MyMathSheets.CommonLibTest.csproj --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:MergeWith=${{ env.OUTPUT_DIR }}/coverage.json /p:CoverletOutput=${{ env.OUTPUT_DIR }}/ --% /p:CoverletOutputFormat=\"cobertura,json\"
        if (-Not $?) {
          exit 1
        } else {
          exit 0
        }
        
    #- name: Create unit test report
    #  uses: dorny/test-reporter@v1
    #  if: always()
    #  with:
    #      name: NUnit report
    #      path: "test-results.trx"
    #      reporter: dotnet-trx
    #      only-summary: 'false'
    #      fail-on-error: 'false'
    #      working-directory: ${{ env.WORKING_DIR }}
          
    #- name: Archive nunit test artifacts
    #  if: always()
    #  continue-on-error: true
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: NUnitTestLog
    #    path: |
    #      ${{ env.WORKING_DIR }}/test-results.trx
    #    retention-days: 30
        
    #- name: Create coverage report
    #  if: always()
    #  continue-on-error: true
    #  run: |
    #    reportgenerator -reports:${{ env.OUTPUT_DIR }}/coverage.cobertura.xml -targetdir:${{ env.REPORT_DIR }} -reporttypes:Html

    #- name: Archive coverage report artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: UnitTestCoverageReport
    #    path: ${{ env.REPORT_DIR }}
    #    retention-days: 30
