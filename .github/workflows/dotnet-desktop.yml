name: do build MyMathSheets
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  WORKING_DIR: w_${{ github.run_id }}

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug]
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: checkout repository
      uses: actions/checkout@v3
      with:
          path: ${{ env.WORKING_DIR }}
    - name: checkout lfs contens
      run: |
          git lfs checkout
          git lfs pull
      working-directory: ${{ env.WORKING_DIR }}

    - name: install dotnet
      uses: actions/setup-dotnet@v3
      id: install_dotnet
      with:
          dotnet-version: '5.0.x'
          
    - run: echo '${{ steps.install_dotnet.outputs.dotnet-version }}'

    - name: dotnet build 
      id: dotnet_build
      run: |
          $err_sols = ""
          $hasError = $false

          $targetSolution = "MyMathSheets.sln"
          Write-Output("***")
          Write-Output("*** Solution [" + $targetSolution + "] building... ***")
          Write-Output("***")
          dotnet clean ./$targetSolution
          dotnet restore ./$targetSolution
          dotnet build ./$targetSolution -m:1 --no-restore /warnaserror
          if (-Not $?) {
            $hasError = $true
            $err_sols = $err_sols + "[" + $targetSolution + "]"
          }

          if ($hasError) {
            echo "target_solution=$err_sols" >> $env:GITHUB_OUTPUT
            exit 1
          } else {
            exit 0
          }
      working-directory: ${{ env.WORKING_DIR }}

    - name: error handling build
      if: always()
      run: |
        if ("${{ steps.dotnet_build.outcome }}" -eq "failure") {
          echo "::notice::*** ${{ steps.dotnet_build.outputs.target_solution }} build error ***"
          echo ${{ steps.dotnet_build.outcome }}
        }
      working-directory: ${{ env.WORKING_DIR }}
